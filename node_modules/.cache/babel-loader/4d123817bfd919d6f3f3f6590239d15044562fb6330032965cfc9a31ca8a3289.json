{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aefau\\\\Documents\\\\Become an AI Product Designer\\\\Guidewell\\\\src\\\\components\\\\Charts.tsx\";\nimport React from 'react';\nimport './Charts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LineChart({\n  title,\n  data = [],\n  labels = [],\n  className = ''\n}) {\n  // Placeholder chart component - in a real app, you'd use a charting library like Chart.js or Recharts\n  const maxValue = Math.max(...data, 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chart-container ${className}`,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-placeholder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bars\",\n        children: data.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-bar\",\n          style: {\n            height: `${value / maxValue * 100}%`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-labels\",\n        children: labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chart-label\",\n          children: label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = LineChart;\nexport function PieChart({\n  title,\n  data = [],\n  labels = [],\n  className = ''\n}) {\n  // Placeholder pie chart component\n  const total = data.reduce((sum, value) => sum + value, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chart-container ${className}`,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart-placeholder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pie-chart\",\n        children: data.map((value, index) => {\n          const percentage = value / total * 100;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pie-slice\",\n            style: {\n              transform: `rotate(${index * 90}deg)`,\n              background: `conic-gradient(from 0deg, var(--color-${index % 4}) ${percentage}%, transparent ${percentage}%)`\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pie-legend\",\n        children: labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `legend-color color-${index % 4}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-label\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c2 = PieChart;\nexport function ProgressChart({\n  value,\n  max,\n  label,\n  className = ''\n}) {\n  const percentage = Math.min(value / max * 100, 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `progress-chart ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-fill\",\n        style: {\n          width: `${percentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-text\",\n      children: [value.toLocaleString(), \" / \", max.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ProgressChart;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"PieChart\");\n$RefreshReg$(_c3, \"ProgressChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LineChart","title","data","labels","className","maxValue","Math","max","children","fileName","_jsxFileName","lineNumber","columnNumber","map","value","index","style","height","label","_c","PieChart","total","reduce","sum","percentage","transform","background","_c2","ProgressChart","min","width","toLocaleString","_c3","$RefreshReg$"],"sources":["C:/Users/aefau/Documents/Become an AI Product Designer/Guidewell/src/components/Charts.tsx"],"sourcesContent":["import React from 'react';\r\nimport './Charts.css';\r\n\r\ninterface ChartProps {\r\n  title?: string;\r\n  data?: number[];\r\n  labels?: string[];\r\n  className?: string;\r\n}\r\n\r\nexport function LineChart({ title, data = [], labels = [], className = '' }: ChartProps) {\r\n  // Placeholder chart component - in a real app, you'd use a charting library like Chart.js or Recharts\r\n  const maxValue = Math.max(...data, 1);\r\n  \r\n  return (\r\n    <div className={`chart-container ${className}`}>\r\n      {title && <h3 className=\"chart-title\">{title}</h3>}\r\n      <div className=\"chart-placeholder\">\r\n        <div className=\"chart-bars\">\r\n          {data.map((value, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"chart-bar\"\r\n              style={{ height: `${(value / maxValue) * 100}%` }}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"chart-labels\">\r\n          {labels.map((label, index) => (\r\n            <span key={index} className=\"chart-label\">\r\n              {label}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function PieChart({ title, data = [], labels = [], className = '' }: ChartProps) {\r\n  // Placeholder pie chart component\r\n  const total = data.reduce((sum, value) => sum + value, 0);\r\n  \r\n  return (\r\n    <div className={`chart-container ${className}`}>\r\n      {title && <h3 className=\"chart-title\">{title}</h3>}\r\n      <div className=\"pie-chart-placeholder\">\r\n        <div className=\"pie-chart\">\r\n          {data.map((value, index) => {\r\n            const percentage = (value / total) * 100;\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"pie-slice\"\r\n                style={{\r\n                  transform: `rotate(${index * 90}deg)`,\r\n                  background: `conic-gradient(from 0deg, var(--color-${index % 4}) ${percentage}%, transparent ${percentage}%)`\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"pie-legend\">\r\n          {labels.map((label, index) => (\r\n            <div key={index} className=\"legend-item\">\r\n              <div className={`legend-color color-${index % 4}`} />\r\n              <span className=\"legend-label\">{label}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ProgressChart({ value, max, label, className = '' }: { value: number; max: number; label: string; className?: string }) {\r\n  const percentage = Math.min((value / max) * 100, 100);\r\n  \r\n  return (\r\n    <div className={`progress-chart ${className}`}>\r\n      <div className=\"progress-label\">{label}</div>\r\n      <div className=\"progress-bar\">\r\n        <div \r\n          className=\"progress-fill\" \r\n          style={{ width: `${percentage}%` }}\r\n        />\r\n      </div>\r\n      <div className=\"progress-text\">\r\n        {value.toLocaleString()} / {max.toLocaleString()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}