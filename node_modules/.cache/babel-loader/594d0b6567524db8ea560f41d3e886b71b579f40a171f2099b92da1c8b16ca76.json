{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aefau\\\\Documents\\\\Become an AI Product Designer\\\\Guidewell\\\\src\\\\pages\\\\Onboarding\\\\steps\\\\Connect.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PlaidLinkButton from '../../../components/PlaidLinkButton';\nimport Sheet from '../../../components/Sheet';\nimport { ConnectChoose } from './ConnectChoose';\nimport { useAppState } from '../../../state/AppStateContext';\nimport ServerTest from '../../../components/ServerTest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Connect({\n  onNext,\n  onBack\n}) {\n  _s();\n  const [open, setOpen] = useState(false);\n  const {\n    setAccounts\n  } = useAppState();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's connect your accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Connecting is optional. Guidewell provides educational scenarios, not financial advice.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ServerTest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlaidLinkButton, {\n      userId: \"demo-user-123\",\n      onSuccess: linked => {\n        setAccounts(prev => [...prev, ...linked]);\n        onNext();\n      }\n    }, \"plaid-link-singleton\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpen(true),\n      children: \"Add accounts another way\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onNext,\n      children: \"Skip for now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sheet, {\n      open: open,\n      onClose: () => setOpen(false),\n      title: \"Add accounts another way\",\n      children: /*#__PURE__*/_jsxDEV(ConnectChoose, {\n        onClose: () => setOpen(false),\n        onComplete: () => {\n          setOpen(false);\n          onNext();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Connect, \"BdKJYwB1dMq1hd1npeVVbbHWKLo=\", false, function () {\n  return [useAppState];\n});\n_c = Connect;\nvar _c;\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"names":["React","useState","PlaidLinkButton","Sheet","ConnectChoose","useAppState","ServerTest","jsxDEV","_jsxDEV","Connect","onNext","onBack","_s","open","setOpen","setAccounts","children","fileName","_jsxFileName","lineNumber","columnNumber","userId","onSuccess","linked","prev","onClick","onClose","title","onComplete","_c","$RefreshReg$"],"sources":["C:/Users/aefau/Documents/Become an AI Product Designer/Guidewell/src/pages/Onboarding/steps/Connect.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PlaidLinkButton from '../../../components/PlaidLinkButton';\r\nimport Sheet from '../../../components/Sheet';\r\nimport { ConnectChoose } from './ConnectChoose';\r\nimport { useAppState } from '../../../state/AppStateContext';\r\nimport ServerTest from '../../../components/ServerTest';\r\n\r\nexport default function Connect({ onNext, onBack }: { onNext: () => void; onBack: () => void }) {\r\n  const [open, setOpen] = useState(false);\r\n  const { setAccounts } = useAppState();\r\n  \r\n  return (\r\n    <section>\r\n      <h2>Let's connect your accounts</h2>\r\n      <p>Connecting is optional. Guidewell provides educational scenarios, not financial advice.</p>\r\n      \r\n      <ServerTest />\r\n\r\n      <PlaidLinkButton\r\n        key=\"plaid-link-singleton\"\r\n        userId=\"demo-user-123\"\r\n        onSuccess={(linked) => {\r\n          setAccounts(prev => [...prev, ...linked]);\r\n          onNext();\r\n        }}\r\n      />\r\n\r\n      {/* Add accounts another way button / sheet */}\r\n      <button onClick={() => setOpen(true)}>\r\n        Add accounts another way\r\n      </button>\r\n      \r\n      <button onClick={onNext}>Skip for now</button>\r\n      <button onClick={onBack}>Back</button>\r\n      \r\n      <Sheet open={open} onClose={() => setOpen(false)} title=\"Add accounts another way\">\r\n        <ConnectChoose \r\n          onClose={() => setOpen(false)} \r\n          onComplete={() => { \r\n            setOpen(false); \r\n            onNext(); \r\n          }} \r\n        />\r\n      </Sheet>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,qCAAqC;AACjE,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,OAAOC,UAAU,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,OAAOA,CAAC;EAAEC,MAAM;EAAEC;AAAmD,CAAC,EAAE;EAAAC,EAAA;EAC9F,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM;IAAEc;EAAY,CAAC,GAAGV,WAAW,CAAC,CAAC;EAErC,oBACEG,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCZ,OAAA;MAAAQ,QAAA,EAAG;IAAuF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE9FZ,OAAA,CAACF,UAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEdZ,OAAA,CAACN,eAAe;MAEdmB,MAAM,EAAC,eAAe;MACtBC,SAAS,EAAGC,MAAM,IAAK;QACrBR,WAAW,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,GAAGD,MAAM,CAAC,CAAC;QACzCb,MAAM,CAAC,CAAC;MACV;IAAE,GALE,sBAAsB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAM3B,CAAC,eAGFZ,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAAC,IAAI,CAAE;MAAAE,QAAA,EAAC;IAEtC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETZ,OAAA;MAAQiB,OAAO,EAAEf,MAAO;MAAAM,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CZ,OAAA;MAAQiB,OAAO,EAAEd,MAAO;MAAAK,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEtCZ,OAAA,CAACL,KAAK;MAACU,IAAI,EAAEA,IAAK;MAACa,OAAO,EAAEA,CAAA,KAAMZ,OAAO,CAAC,KAAK,CAAE;MAACa,KAAK,EAAC,0BAA0B;MAAAX,QAAA,eAChFR,OAAA,CAACJ,aAAa;QACZsB,OAAO,EAAEA,CAAA,KAAMZ,OAAO,CAAC,KAAK,CAAE;QAC9Bc,UAAU,EAAEA,CAAA,KAAM;UAChBd,OAAO,CAAC,KAAK,CAAC;UACdJ,MAAM,CAAC,CAAC;QACV;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACR,EAAA,CAvCuBH,OAAO;EAAA,QAELJ,WAAW;AAAA;AAAAwB,EAAA,GAFbpB,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}