{"ast":null,"code":"export function formatCurrency(amount) {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(amount);\n}\nexport function formatPercentage(value, decimals = 1) {\n  return `${value.toFixed(decimals)}%`;\n}\nexport function formatNumber(value) {\n  return new Intl.NumberFormat('en-US').format(value);\n}\nexport function formatMonthsToYears(months) {\n  if (months < 12) {\n    return `${months} month${months !== 1 ? 's' : ''}`;\n  }\n  const years = Math.floor(months / 12);\n  const remainingMonths = months % 12;\n  if (remainingMonths === 0) {\n    return `${years} year${years !== 1 ? 's' : ''}`;\n  }\n  return `${years} year${years !== 1 ? 's' : ''} ${remainingMonths} month${remainingMonths !== 1 ? 's' : ''}`;\n}\nexport function formatLargeNumber(value) {\n  if (value >= 1000000) {\n    return `${(value / 1000000).toFixed(1)}M`;\n  } else if (value >= 1000) {\n    return `${(value / 1000).toFixed(1)}K`;\n  }\n  return value.toString();\n}","map":{"version":3,"names":["formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","value","decimals","toFixed","formatNumber","formatMonthsToYears","months","years","Math","floor","remainingMonths","formatLargeNumber","toString"],"sources":["C:/Users/aefau/Documents/Become an AI Product Designer/Guidewell/src/utils/format.ts"],"sourcesContent":["export function formatCurrency(amount: number): string {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0\r\n  }).format(amount);\r\n}\r\n\r\nexport function formatPercentage(value: number, decimals: number = 1): string {\r\n  return `${value.toFixed(decimals)}%`;\r\n}\r\n\r\nexport function formatNumber(value: number): string {\r\n  return new Intl.NumberFormat('en-US').format(value);\r\n}\r\n\r\nexport function formatMonthsToYears(months: number): string {\r\n  if (months < 12) {\r\n    return `${months} month${months !== 1 ? 's' : ''}`;\r\n  }\r\n  \r\n  const years = Math.floor(months / 12);\r\n  const remainingMonths = months % 12;\r\n  \r\n  if (remainingMonths === 0) {\r\n    return `${years} year${years !== 1 ? 's' : ''}`;\r\n  }\r\n  \r\n  return `${years} year${years !== 1 ? 's' : ''} ${remainingMonths} month${remainingMonths !== 1 ? 's' : ''}`;\r\n}\r\n\r\nexport function formatLargeNumber(value: number): string {\r\n  if (value >= 1000000) {\r\n    return `${(value / 1000000).toFixed(1)}M`;\r\n  } else if (value >= 1000) {\r\n    return `${(value / 1000).toFixed(1)}K`;\r\n  }\r\n  return value.toString();\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,MAAc,EAAU;EACrD,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IACpCC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE,KAAK;IACfC,qBAAqB,EAAE,CAAC;IACxBC,qBAAqB,EAAE;EACzB,CAAC,CAAC,CAACC,MAAM,CAACP,MAAM,CAAC;AACnB;AAEA,OAAO,SAASQ,gBAAgBA,CAACC,KAAa,EAAEC,QAAgB,GAAG,CAAC,EAAU;EAC5E,OAAO,GAAGD,KAAK,CAACE,OAAO,CAACD,QAAQ,CAAC,GAAG;AACtC;AAEA,OAAO,SAASE,YAAYA,CAACH,KAAa,EAAU;EAClD,OAAO,IAAIR,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC,CAACK,MAAM,CAACE,KAAK,CAAC;AACrD;AAEA,OAAO,SAASI,mBAAmBA,CAACC,MAAc,EAAU;EAC1D,IAAIA,MAAM,GAAG,EAAE,EAAE;IACf,OAAO,GAAGA,MAAM,SAASA,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE;EACpD;EAEA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,GAAG,EAAE,CAAC;EACrC,MAAMI,eAAe,GAAGJ,MAAM,GAAG,EAAE;EAEnC,IAAII,eAAe,KAAK,CAAC,EAAE;IACzB,OAAO,GAAGH,KAAK,QAAQA,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE;EACjD;EAEA,OAAO,GAAGA,KAAK,QAAQA,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,IAAIG,eAAe,SAASA,eAAe,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE;AAC7G;AAEA,OAAO,SAASC,iBAAiBA,CAACV,KAAa,EAAU;EACvD,IAAIA,KAAK,IAAI,OAAO,EAAE;IACpB,OAAO,GAAG,CAACA,KAAK,GAAG,OAAO,EAAEE,OAAO,CAAC,CAAC,CAAC,GAAG;EAC3C,CAAC,MAAM,IAAIF,KAAK,IAAI,IAAI,EAAE;IACxB,OAAO,GAAG,CAACA,KAAK,GAAG,IAAI,EAAEE,OAAO,CAAC,CAAC,CAAC,GAAG;EACxC;EACA,OAAOF,KAAK,CAACW,QAAQ,CAAC,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}