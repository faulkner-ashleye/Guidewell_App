{"ast":null,"code":"export function formatCurrency(amount){return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:0,maximumFractionDigits:0}).format(amount);}export function formatPercentage(value){let decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return\"\".concat(value.toFixed(decimals),\"%\");}export function formatNumber(value){return new Intl.NumberFormat('en-US').format(value);}export function formatMonthsToYears(months){if(months<12){return\"\".concat(months,\" month\").concat(months!==1?'s':'');}const years=Math.floor(months/12);const remainingMonths=months%12;if(remainingMonths===0){return\"\".concat(years,\" year\").concat(years!==1?'s':'');}return\"\".concat(years,\" year\").concat(years!==1?'s':'',\" \").concat(remainingMonths,\" month\").concat(remainingMonths!==1?'s':'');}export function formatLargeNumber(value){if(value>=1000000){return\"\".concat((value/1000000).toFixed(1),\"M\");}else if(value>=1000){return\"\".concat((value/1000).toFixed(1),\"K\");}return value.toString();}","map":{"version":3,"names":["formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","value","decimals","arguments","length","undefined","concat","toFixed","formatNumber","formatMonthsToYears","months","years","Math","floor","remainingMonths","formatLargeNumber","toString"],"sources":["C:/Users/aefau/Documents/Become an AI Product Designer/Guidewell/src/utils/format.ts"],"sourcesContent":["export function formatCurrency(amount: number): string {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0\r\n  }).format(amount);\r\n}\r\n\r\nexport function formatPercentage(value: number, decimals: number = 1): string {\r\n  return `${value.toFixed(decimals)}%`;\r\n}\r\n\r\nexport function formatNumber(value: number): string {\r\n  return new Intl.NumberFormat('en-US').format(value);\r\n}\r\n\r\nexport function formatMonthsToYears(months: number): string {\r\n  if (months < 12) {\r\n    return `${months} month${months !== 1 ? 's' : ''}`;\r\n  }\r\n  \r\n  const years = Math.floor(months / 12);\r\n  const remainingMonths = months % 12;\r\n  \r\n  if (remainingMonths === 0) {\r\n    return `${years} year${years !== 1 ? 's' : ''}`;\r\n  }\r\n  \r\n  return `${years} year${years !== 1 ? 's' : ''} ${remainingMonths} month${remainingMonths !== 1 ? 's' : ''}`;\r\n}\r\n\r\nexport function formatLargeNumber(value: number): string {\r\n  if (value >= 1000000) {\r\n    return `${(value / 1000000).toFixed(1)}M`;\r\n  } else if (value >= 1000) {\r\n    return `${(value / 1000).toFixed(1)}K`;\r\n  }\r\n  return value.toString();\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAO,SAAS,CAAAA,cAAcA,CAACC,MAAc,CAAU,CACrD,MAAO,IAAI,CAAAC,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CACpCC,KAAK,CAAE,UAAU,CACjBC,QAAQ,CAAE,KAAK,CACfC,qBAAqB,CAAE,CAAC,CACxBC,qBAAqB,CAAE,CACzB,CAAC,CAAC,CAACC,MAAM,CAACP,MAAM,CAAC,CACnB,CAEA,MAAO,SAAS,CAAAQ,gBAAgBA,CAACC,KAAa,CAAgC,IAA9B,CAAAC,QAAgB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAClE,SAAAG,MAAA,CAAUL,KAAK,CAACM,OAAO,CAACL,QAAQ,CAAC,MACnC,CAEA,MAAO,SAAS,CAAAM,YAAYA,CAACP,KAAa,CAAU,CAClD,MAAO,IAAI,CAAAR,IAAI,CAACC,YAAY,CAAC,OAAO,CAAC,CAACK,MAAM,CAACE,KAAK,CAAC,CACrD,CAEA,MAAO,SAAS,CAAAQ,mBAAmBA,CAACC,MAAc,CAAU,CAC1D,GAAIA,MAAM,CAAG,EAAE,CAAE,CACf,SAAAJ,MAAA,CAAUI,MAAM,WAAAJ,MAAA,CAASI,MAAM,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,EAClD,CAEA,KAAM,CAAAC,KAAK,CAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAG,EAAE,CAAC,CACrC,KAAM,CAAAI,eAAe,CAAGJ,MAAM,CAAG,EAAE,CAEnC,GAAII,eAAe,GAAK,CAAC,CAAE,CACzB,SAAAR,MAAA,CAAUK,KAAK,UAAAL,MAAA,CAAQK,KAAK,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,EAC/C,CAEA,SAAAL,MAAA,CAAUK,KAAK,UAAAL,MAAA,CAAQK,KAAK,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,MAAAL,MAAA,CAAIQ,eAAe,WAAAR,MAAA,CAASQ,eAAe,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,EAC3G,CAEA,MAAO,SAAS,CAAAC,iBAAiBA,CAACd,KAAa,CAAU,CACvD,GAAIA,KAAK,EAAI,OAAO,CAAE,CACpB,SAAAK,MAAA,CAAU,CAACL,KAAK,CAAG,OAAO,EAAEM,OAAO,CAAC,CAAC,CAAC,MACxC,CAAC,IAAM,IAAIN,KAAK,EAAI,IAAI,CAAE,CACxB,SAAAK,MAAA,CAAU,CAACL,KAAK,CAAG,IAAI,EAAEM,OAAO,CAAC,CAAC,CAAC,MACrC,CACA,MAAO,CAAAN,KAAK,CAACe,QAAQ,CAAC,CAAC,CACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}