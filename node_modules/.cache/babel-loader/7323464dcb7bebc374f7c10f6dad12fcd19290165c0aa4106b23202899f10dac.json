{"ast":null,"code":"import React,{useState,useEffect}from'react';import{supabase}from'../lib/supabase';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function SupabaseConnectionTest(){const[status,setStatus]=useState('checking');const[message,setMessage]=useState('');useEffect(()=>{testConnection();},[]);const testConnection=async()=>{try{// Simple test query to check if Supabase is accessible\nconst{data,error}=await supabase.from('users').select('count').limit(1);if(error){setStatus('error');setMessage(\"Connection failed: \".concat(error.message));}else{setStatus('connected');setMessage('Supabase connection successful!');}}catch(err){setStatus('error');setMessage(\"Connection error: \".concat(err.message));}};const getStatusColor=()=>{switch(status){case'connected':return'#10b981';case'error':return'#ef4444';default:return'#6b7280';}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'16px',border:'1px solid #e5e7eb',borderRadius:'8px',margin:'16px 0',backgroundColor:'#f9fafb'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',width:'12px',height:'12px',borderRadius:'50%',backgroundColor:getStatusColor(),marginRight:'8px'}}),/*#__PURE__*/_jsx(\"strong\",{children:\"Supabase Status:\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'14px',color:'#6b7280'},children:status==='checking'?'Checking connection...':message}),status==='error'&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'8px',padding:'8px',backgroundColor:'#fef2f2',border:'1px solid #fecaca',borderRadius:'4px',fontSize:'12px',color:'#dc2626'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" You may need to set up your database schema in Supabase first. Check the SUPABASE_SETUP.md file for instructions.\"]})]});}","map":{"version":3,"names":["React","useState","useEffect","supabase","jsx","_jsx","jsxs","_jsxs","SupabaseConnectionTest","status","setStatus","message","setMessage","testConnection","data","error","from","select","limit","concat","err","getStatusColor","style","padding","border","borderRadius","margin","backgroundColor","children","display","alignItems","marginBottom","width","height","marginRight","fontSize","color","marginTop"],"sources":["C:/Users/aefau/Documents/Become an AI Product Designer/Guidewell/src/components/SupabaseConnectionTest.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nexport default function SupabaseConnectionTest() {\r\n  const [status, setStatus] = useState<'checking' | 'connected' | 'error'>('checking');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    testConnection();\r\n  }, []);\r\n\r\n  const testConnection = async () => {\r\n    try {\r\n      // Simple test query to check if Supabase is accessible\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .select('count')\r\n        .limit(1);\r\n      \r\n      if (error) {\r\n        setStatus('error');\r\n        setMessage(`Connection failed: ${error.message}`);\r\n      } else {\r\n        setStatus('connected');\r\n        setMessage('Supabase connection successful!');\r\n      }\r\n    } catch (err: any) {\r\n      setStatus('error');\r\n      setMessage(`Connection error: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = () => {\r\n    switch (status) {\r\n      case 'connected': return '#10b981';\r\n      case 'error': return '#ef4444';\r\n      default: return '#6b7280';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      padding: '16px', \r\n      border: '1px solid #e5e7eb', \r\n      borderRadius: '8px', \r\n      margin: '16px 0',\r\n      backgroundColor: '#f9fafb'\r\n    }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\r\n        <span style={{ \r\n          display: 'inline-block', \r\n          width: '12px', \r\n          height: '12px', \r\n          borderRadius: '50%', \r\n          backgroundColor: getStatusColor(),\r\n          marginRight: '8px'\r\n        }}></span>\r\n        <strong>Supabase Status:</strong>\r\n      </div>\r\n      <div style={{ fontSize: '14px', color: '#6b7280' }}>\r\n        {status === 'checking' ? 'Checking connection...' : message}\r\n      </div>\r\n      {status === 'error' && (\r\n        <div style={{ \r\n          marginTop: '8px', \r\n          padding: '8px', \r\n          backgroundColor: '#fef2f2', \r\n          border: '1px solid #fecaca',\r\n          borderRadius: '4px',\r\n          fontSize: '12px',\r\n          color: '#dc2626'\r\n        }}>\r\n          <strong>Note:</strong> You may need to set up your database schema in Supabase first.\r\n          Check the SUPABASE_SETUP.md file for instructions.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,QAAQ,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3C,cAAe,SAAS,CAAAC,sBAAsBA,CAAA,CAAG,CAC/C,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAqC,UAAU,CAAC,CACpF,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACdW,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF;AACA,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAZ,QAAQ,CACnCa,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,OAAO,CAAC,CACfC,KAAK,CAAC,CAAC,CAAC,CAEX,GAAIH,KAAK,CAAE,CACTL,SAAS,CAAC,OAAO,CAAC,CAClBE,UAAU,uBAAAO,MAAA,CAAuBJ,KAAK,CAACJ,OAAO,CAAE,CAAC,CACnD,CAAC,IAAM,CACLD,SAAS,CAAC,WAAW,CAAC,CACtBE,UAAU,CAAC,iCAAiC,CAAC,CAC/C,CACF,CAAE,MAAOQ,GAAQ,CAAE,CACjBV,SAAS,CAAC,OAAO,CAAC,CAClBE,UAAU,sBAAAO,MAAA,CAAsBC,GAAG,CAACT,OAAO,CAAE,CAAC,CAChD,CACF,CAAC,CAED,KAAM,CAAAU,cAAc,CAAGA,CAAA,GAAM,CAC3B,OAAQZ,MAAM,EACZ,IAAK,WAAW,CAAE,MAAO,SAAS,CAClC,IAAK,OAAO,CAAE,MAAO,SAAS,CAC9B,QAAS,MAAO,SAAS,CAC3B,CACF,CAAC,CAED,mBACEF,KAAA,QAAKe,KAAK,CAAE,CACVC,OAAO,CAAE,MAAM,CACfC,MAAM,CAAE,mBAAmB,CAC3BC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,QAAQ,CAChBC,eAAe,CAAE,SACnB,CAAE,CAAAC,QAAA,eACArB,KAAA,QAAKe,KAAK,CAAE,CAAEO,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEC,YAAY,CAAE,KAAM,CAAE,CAAAH,QAAA,eACzEvB,IAAA,SAAMiB,KAAK,CAAE,CACXO,OAAO,CAAE,cAAc,CACvBG,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdR,YAAY,CAAE,KAAK,CACnBE,eAAe,CAAEN,cAAc,CAAC,CAAC,CACjCa,WAAW,CAAE,KACf,CAAE,CAAO,CAAC,cACV7B,IAAA,WAAAuB,QAAA,CAAQ,kBAAgB,CAAQ,CAAC,EAC9B,CAAC,cACNvB,IAAA,QAAKiB,KAAK,CAAE,CAAEa,QAAQ,CAAE,MAAM,CAAEC,KAAK,CAAE,SAAU,CAAE,CAAAR,QAAA,CAChDnB,MAAM,GAAK,UAAU,CAAG,wBAAwB,CAAGE,OAAO,CACxD,CAAC,CACLF,MAAM,GAAK,OAAO,eACjBF,KAAA,QAAKe,KAAK,CAAE,CACVe,SAAS,CAAE,KAAK,CAChBd,OAAO,CAAE,KAAK,CACdI,eAAe,CAAE,SAAS,CAC1BH,MAAM,CAAE,mBAAmB,CAC3BC,YAAY,CAAE,KAAK,CACnBU,QAAQ,CAAE,MAAM,CAChBC,KAAK,CAAE,SACT,CAAE,CAAAR,QAAA,eACAvB,IAAA,WAAAuB,QAAA,CAAQ,OAAK,CAAQ,CAAC,qHAExB,EAAK,CACN,EACE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}