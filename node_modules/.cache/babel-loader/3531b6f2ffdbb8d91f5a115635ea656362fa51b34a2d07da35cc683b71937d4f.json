{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aefau\\\\Documents\\\\Become an AI Product Designer\\\\Guidewell\\\\src\\\\components\\\\SupabaseConnectionTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SupabaseConnectionTest() {\n  _s();\n  const [status, setStatus] = useState('checking');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    testConnection();\n  }, []);\n  const testConnection = async () => {\n    try {\n      // Simple test query to check if Supabase is accessible\n      const {\n        data,\n        error\n      } = await supabase.from('users').select('count').limit(1);\n      if (error) {\n        setStatus('error');\n        setMessage(`Connection failed: ${error.message}`);\n      } else {\n        setStatus('connected');\n        setMessage('Supabase connection successful!');\n      }\n    } catch (err) {\n      setStatus('error');\n      setMessage(`Connection error: ${err.message}`);\n    }\n  };\n  const getStatusColor = () => {\n    switch (status) {\n      case 'connected':\n        return '#10b981';\n      case 'error':\n        return '#ef4444';\n      default:\n        return '#6b7280';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '16px',\n      border: '1px solid #e5e7eb',\n      borderRadius: '8px',\n      margin: '16px 0',\n      backgroundColor: '#f9fafb'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'inline-block',\n          width: '12px',\n          height: '12px',\n          borderRadius: '50%',\n          backgroundColor: getStatusColor(),\n          marginRight: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Supabase Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '14px',\n        color: '#6b7280'\n      },\n      children: status === 'checking' ? 'Checking connection...' : message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '8px',\n        padding: '8px',\n        backgroundColor: '#fef2f2',\n        border: '1px solid #fecaca',\n        borderRadius: '4px',\n        fontSize: '12px',\n        color: '#dc2626'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Note:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), \" You may need to set up your database schema in Supabase first. Check the SUPABASE_SETUP.md file for instructions.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(SupabaseConnectionTest, \"kOuCxF+FOj1AORffougFeEMBivM=\");\n_c = SupabaseConnectionTest;\nvar _c;\n$RefreshReg$(_c, \"SupabaseConnectionTest\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","SupabaseConnectionTest","_s","status","setStatus","message","setMessage","testConnection","data","error","from","select","limit","err","getStatusColor","style","padding","border","borderRadius","margin","backgroundColor","children","display","alignItems","marginBottom","width","height","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/aefau/Documents/Become an AI Product Designer/Guidewell/src/components/SupabaseConnectionTest.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nexport default function SupabaseConnectionTest() {\r\n  const [status, setStatus] = useState<'checking' | 'connected' | 'error'>('checking');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    testConnection();\r\n  }, []);\r\n\r\n  const testConnection = async () => {\r\n    try {\r\n      // Simple test query to check if Supabase is accessible\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .select('count')\r\n        .limit(1);\r\n      \r\n      if (error) {\r\n        setStatus('error');\r\n        setMessage(`Connection failed: ${error.message}`);\r\n      } else {\r\n        setStatus('connected');\r\n        setMessage('Supabase connection successful!');\r\n      }\r\n    } catch (err: any) {\r\n      setStatus('error');\r\n      setMessage(`Connection error: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = () => {\r\n    switch (status) {\r\n      case 'connected': return '#10b981';\r\n      case 'error': return '#ef4444';\r\n      default: return '#6b7280';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      padding: '16px', \r\n      border: '1px solid #e5e7eb', \r\n      borderRadius: '8px', \r\n      margin: '16px 0',\r\n      backgroundColor: '#f9fafb'\r\n    }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\r\n        <span style={{ \r\n          display: 'inline-block', \r\n          width: '12px', \r\n          height: '12px', \r\n          borderRadius: '50%', \r\n          backgroundColor: getStatusColor(),\r\n          marginRight: '8px'\r\n        }}></span>\r\n        <strong>Supabase Status:</strong>\r\n      </div>\r\n      <div style={{ fontSize: '14px', color: '#6b7280' }}>\r\n        {status === 'checking' ? 'Checking connection...' : message}\r\n      </div>\r\n      {status === 'error' && (\r\n        <div style={{ \r\n          marginTop: '8px', \r\n          padding: '8px', \r\n          backgroundColor: '#fef2f2', \r\n          border: '1px solid #fecaca',\r\n          borderRadius: '4px',\r\n          fontSize: '12px',\r\n          color: '#dc2626'\r\n        }}>\r\n          <strong>Note:</strong> You may need to set up your database schema in Supabase first.\r\n          Check the SUPABASE_SETUP.md file for instructions.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}