{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aefau\\\\Documents\\\\Become an AI Product Designer\\\\Guidewell\\\\src\\\\components\\\\ServerTest.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ServerTest() {\n  _s();\n  const [status, setStatus] = useState('Testing...');\n  const [details, setDetails] = useState('');\n  useEffect(() => {\n    const testServer = async () => {\n      try {\n        console.log('Testing server connection...');\n        const response = await fetch('http://localhost:3001/test');\n        const data = await response.json();\n        setStatus('✅ Server connected!');\n        setDetails(JSON.stringify(data, null, 2));\n        console.log('Server test successful:', data);\n      } catch (error) {\n        setStatus('❌ Server connection failed');\n        setDetails(error.message);\n        console.error('Server test failed:', error);\n      }\n    };\n    testServer();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      border: '1px solid #ccc',\n      margin: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Server Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this), \" \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        background: '#f5f5f5',\n        padding: '10px',\n        fontSize: '12px'\n      },\n      children: details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ServerTest, \"1biCiTASo01HqINl7MXBSoNX0xA=\");\n_c = ServerTest;\nvar _c;\n$RefreshReg$(_c, \"ServerTest\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","ServerTest","_s","status","setStatus","details","setDetails","testServer","console","log","response","fetch","data","json","JSON","stringify","error","message","style","padding","border","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","background","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/aefau/Documents/Become an AI Product Designer/Guidewell/src/components/ServerTest.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport default function ServerTest() {\r\n  const [status, setStatus] = useState<string>('Testing...');\r\n  const [details, setDetails] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    const testServer = async () => {\r\n      try {\r\n        console.log('Testing server connection...');\r\n        const response = await fetch('http://localhost:3001/test');\r\n        const data = await response.json();\r\n        setStatus('✅ Server connected!');\r\n        setDetails(JSON.stringify(data, null, 2));\r\n        console.log('Server test successful:', data);\r\n      } catch (error: any) {\r\n        setStatus('❌ Server connection failed');\r\n        setDetails(error.message);\r\n        console.error('Server test failed:', error);\r\n      }\r\n    };\r\n\r\n    testServer();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #ccc', margin: '10px' }}>\r\n      <h3>Server Connection Test</h3>\r\n      <p><strong>Status:</strong> {status}</p>\r\n      <pre style={{ background: '#f5f5f5', padding: '10px', fontSize: '12px' }}>\r\n        {details}\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAS,YAAY,CAAC;EAC1D,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCT,SAAS,CAAC,qBAAqB,CAAC;QAChCE,UAAU,CAACQ,IAAI,CAACC,SAAS,CAACH,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACzCJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,IAAI,CAAC;MAC9C,CAAC,CAAC,OAAOI,KAAU,EAAE;QACnBZ,SAAS,CAAC,4BAA4B,CAAC;QACvCE,UAAU,CAACU,KAAK,CAACC,OAAO,CAAC;QACzBT,OAAO,CAACQ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IAEDT,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKkB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACxEtB,OAAA;MAAAsB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B1B,OAAA;MAAAsB,QAAA,gBAAGtB,OAAA;QAAAsB,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACvB,MAAM;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxC1B,OAAA;MAAKkB,KAAK,EAAE;QAAES,UAAU,EAAE,SAAS;QAAER,OAAO,EAAE,MAAM;QAAES,QAAQ,EAAE;MAAO,CAAE;MAAAN,QAAA,EACtEjB;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAhCuBD,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}