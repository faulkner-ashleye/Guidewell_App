{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AppStateContext=/*#__PURE__*/createContext(undefined);const defaultStrategyConfig={scope:'all',targetTimeline:'mid',extraContribution:0,allocation:{debtPct:0,savingsPct:0,investPct:0}};export function AppStateProvider(_ref){let{children}=_ref;const[accounts,setAccounts]=useState([]);const[userProfile,setUserProfile]=useState(null);const[strategyConfig,setStrategyConfig]=useState(defaultStrategyConfig);const value={accounts,userProfile,strategyConfig,setAccounts,setUserProfile,setStrategyConfig};return/*#__PURE__*/_jsx(AppStateContext.Provider,{value:value,children:children});}export function useAppState(){const context=useContext(AppStateContext);if(context===undefined){throw new Error('useAppState must be used within an AppStateProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","AppStateContext","undefined","defaultStrategyConfig","scope","targetTimeline","extraContribution","allocation","debtPct","savingsPct","investPct","AppStateProvider","_ref","children","accounts","setAccounts","userProfile","setUserProfile","strategyConfig","setStrategyConfig","value","Provider","useAppState","context","Error"],"sources":["C:/Users/aefau/Documents/Become an AI Product Designer/Guidewell/src/state/AppStateContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\n\nexport type AccountType = 'loan' | 'credit_card' | 'savings' | 'checking' | 'investment';\n\nexport interface Account {\n  id: string;\n  type: AccountType;\n  name: string;\n  balance: number;\n  apr?: number;\n  minPayment?: number;\n  goalTarget?: number;\n  monthlyDirectDeposit?: number;\n}\n\nexport interface UserProfile {\n  ageRange?: string;\n  mainGoals: string[];\n  topPriority?: string;\n  timeline?: string;\n  comfortLevel?: string;\n}\n\nexport interface StrategyAllocation {\n  debtPct: number;\n  savingsPct: number;\n  investPct: number;\n}\n\nexport interface StrategyConfig {\n  scope: 'all' | 'debts' | 'savings' | 'investments' | 'single';\n  preset?: 'debt_crusher' | 'goal_keeper' | 'nest_builder' | 'balanced_climb';\n  targetTimeline: 'short' | 'mid' | 'long';\n  extraContribution: number;\n  allocation: StrategyAllocation;\n  singleAccountId?: string;\n}\n\ninterface AppStateContextType {\n  accounts: Account[];\n  userProfile: UserProfile | null;\n  strategyConfig: StrategyConfig;\n  setAccounts: React.Dispatch<React.SetStateAction<Account[]>>;\n  setUserProfile: (userProfile: UserProfile | null) => void;\n  setStrategyConfig: (strategyConfig: StrategyConfig) => void;\n}\n\nconst AppStateContext = createContext<AppStateContextType | undefined>(undefined);\n\nconst defaultStrategyConfig: StrategyConfig = {\n  scope: 'all',\n  targetTimeline: 'mid',\n  extraContribution: 0,\n  allocation: {\n    debtPct: 0,\n    savingsPct: 0,\n    investPct: 0\n  }\n};\n\nexport function AppStateProvider({ children }: { children: ReactNode }) {\n  const [accounts, setAccounts] = useState<Account[]>([]);\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [strategyConfig, setStrategyConfig] = useState<StrategyConfig>(defaultStrategyConfig);\n\n  const value: AppStateContextType = {\n    accounts,\n    userProfile,\n    strategyConfig,\n    setAccounts,\n    setUserProfile,\n    setStrategyConfig\n  };\n\n  return (\n    <AppStateContext.Provider value={value}>\n      {children}\n    </AppStateContext.Provider>\n  );\n}\n\nexport function useAppState() {\n  const context = useContext(AppStateContext);\n  if (context === undefined) {\n    throw new Error('useAppState must be used within an AppStateProvider');\n  }\n  return context;\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBA+C9E,KAAM,CAAAC,eAAe,cAAGL,aAAa,CAAkCM,SAAS,CAAC,CAEjF,KAAM,CAAAC,qBAAqC,CAAG,CAC5CC,KAAK,CAAE,KAAK,CACZC,cAAc,CAAE,KAAK,CACrBC,iBAAiB,CAAE,CAAC,CACpBC,UAAU,CAAE,CACVC,OAAO,CAAE,CAAC,CACVC,UAAU,CAAE,CAAC,CACbC,SAAS,CAAE,CACb,CACF,CAAC,CAED,MAAO,SAAS,CAAAC,gBAAgBA,CAAAC,IAAA,CAAwC,IAAvC,CAAEC,QAAkC,CAAC,CAAAD,IAAA,CACpE,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAY,EAAE,CAAC,CACvD,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAqB,IAAI,CAAC,CACxE,KAAM,CAACoB,cAAc,CAAEC,iBAAiB,CAAC,CAAGrB,QAAQ,CAAiBK,qBAAqB,CAAC,CAE3F,KAAM,CAAAiB,KAA0B,CAAG,CACjCN,QAAQ,CACRE,WAAW,CACXE,cAAc,CACdH,WAAW,CACXE,cAAc,CACdE,iBACF,CAAC,CAED,mBACEnB,IAAA,CAACC,eAAe,CAACoB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAP,QAAA,CACpCA,QAAQ,CACe,CAAC,CAE/B,CAEA,MAAO,SAAS,CAAAS,WAAWA,CAAA,CAAG,CAC5B,KAAM,CAAAC,OAAO,CAAG1B,UAAU,CAACI,eAAe,CAAC,CAC3C,GAAIsB,OAAO,GAAKrB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAsB,KAAK,CAAC,qDAAqD,CAAC,CACxE,CACA,MAAO,CAAAD,OAAO,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}