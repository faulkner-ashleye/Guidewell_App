{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aefau\\\\Documents\\\\Become an AI Product Designer\\\\Guidewell\\\\src\\\\pages\\\\Onboarding\\\\steps\\\\ConnectChoose.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAppState } from '../../../state/AppStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ConnectChoose({\n  onClose,\n  onComplete\n}) {\n  _s();\n  const [mode, setMode] = useState('menu');\n  const {\n    accounts,\n    setAccounts\n  } = useAppState();\n  const add = newAccounts => {\n    setAccounts([...accounts, ...newAccounts]);\n  };\n  const addOne = account => {\n    setAccounts([...accounts, account]);\n  };\n  if (mode === 'menu') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect-choose\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"connect-button secondary\",\n          onClick: () => setMode('upload'),\n          children: \"Upload documents (photo/PDF)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"connect-button secondary\",\n          onClick: () => setMode('manual'),\n          children: \"Enter manually\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button secondary\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Placeholder for upload and manual modes\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-choose\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Mode: \", mode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button secondary\",\n        onClick: () => setMode('menu'),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button primary\",\n        onClick: onComplete,\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectChoose, \"BXsss+Bve1r9qbju9hkrg5GVc9M=\", false, function () {\n  return [useAppState];\n});\n_c = ConnectChoose;\nvar _c;\n$RefreshReg$(_c, \"ConnectChoose\");","map":{"version":3,"names":["React","useState","useAppState","jsxDEV","_jsxDEV","ConnectChoose","onClose","onComplete","_s","mode","setMode","accounts","setAccounts","add","newAccounts","addOne","account","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aefau/Documents/Become an AI Product Designer/Guidewell/src/pages/Onboarding/steps/ConnectChoose.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAppState } from '../../../state/AppStateContext';\r\nimport DocUpload from '../../../components/DocUpload';\r\nimport ManualAccountForm from '../../../components/ManualAccountForm';\r\n\r\ninterface ConnectChooseProps {\r\n  onClose: () => void;\r\n  onComplete: () => void;\r\n}\r\n\r\nexport function ConnectChoose({ onClose, onComplete }: ConnectChooseProps) {\r\n  const [mode, setMode] = useState<'menu' | 'upload' | 'manual'>('menu');\r\n  const { accounts, setAccounts } = useAppState();\r\n\r\n  const add = (newAccounts: any[]) => {\r\n    setAccounts([...accounts, ...newAccounts]);\r\n  };\r\n\r\n  const addOne = (account: any) => {\r\n    setAccounts([...accounts, account]);\r\n  };\r\n\r\n  if (mode === 'menu') {\r\n    return (\r\n      <div className=\"connect-choose\">\r\n        <div className=\"connect-options\">\r\n          <button \r\n            className=\"connect-button secondary\" \r\n            onClick={() => setMode('upload')}\r\n          >\r\n            Upload documents (photo/PDF)\r\n          </button>\r\n          \r\n          <button \r\n            className=\"connect-button secondary\" \r\n            onClick={() => setMode('manual')}\r\n          >\r\n            Enter manually\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"connect-actions\">\r\n          <button className=\"action-button secondary\" onClick={onClose}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Placeholder for upload and manual modes\r\n  return (\r\n    <div className=\"connect-choose\">\r\n      <p>Mode: {mode}</p>\r\n      <div className=\"connect-actions\">\r\n        <button className=\"action-button secondary\" onClick={() => setMode('menu')}>\r\n          Back\r\n        </button>\r\n        <button className=\"action-button primary\" onClick={onComplete}>\r\n          Complete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}